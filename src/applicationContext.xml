<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 读取属性文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	     <property name="locations">
	        <list>
	          <value>classpath:jdbc.properties</value>
	        </list>
	     </property>
	 </bean>
	
	<!-- 配置数据源文件 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${dataSource.driverName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>
	
	<!-- 2.定义sqlSessionFactory工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
		<!-- 定义sqlSessionTemplate模版简化dao层开发 -->
		
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wd.webservice.dao"></property>
	</bean>
	
	<!--
	<context:component-scan base-package="com.service"></context:component-scan>
	 使用MapperScannerConfigurer省略dao层实现类，自动生成实现类代理
	  注意:1.确保sql映射文件的命名空间值为接口的限定名，且方法名与sql映射文件的id值相同
	       2.生成动态实现类的bean对象的id值就是接口名称首字母小写
	 -->
	 
	 
   <context:component-scan base-package="com.wd.webservice.service.impl"></context:component-scan>
	 
    
	
	
	
	</beans>